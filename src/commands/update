#!/bin/bash
set -e

# [----- INITIALIZE VARIABLES -----]
# [ Pathes ]
# This script's absolute path
SCRIPT_PATH=`realpath $0`

# The absolute command's folder path
COMMANDS_PATH=$(dirname $SCRIPT_PATH)

# The absolute root folder path
ROOT_PATH=$(dirname $COMMANDS_PATH)

# [ Command ]
# The name of this command
COMMAND_NAME="${0##*/}"

# Every possible options for this command
COMMAND_SHORT_OPTIONS="hvi"
COMMAND_LONG_OPTIONS="help,verbose,ignore"


# [----- LOAD CONFIG AND UTILITIES -----]
. $ROOT_PATH/.gns-config
. $ROOT_PATH/utilities/messages.sh
. $ROOT_PATH/utilities/containers.sh


# [----- FUNCTIONS -----]
# Displays the help for this command
showHelp(){
    # Show command's description
    echo -e "${s_bold}[Description]${s_normal} \n"
    showDescription

    # Show command's help
    cat << HELP
${s_bold}[Usage]${s_normal} 
    $ ${s_success}gns ${COMMAND_NAME} [-${COMMAND_SHORT_OPTIONS/[?]}] [--${COMMAND_LONG_OPTIONS//[,]/ --}]${s_normal}
        => the container to update will be the active directory
            or
    $ ${s_success}gns ${COMMAND_NAME} <container-path> [-${COMMAND_SHORT_OPTIONS/[?]}] [--${COMMAND_LONG_OPTIONS//[,]/ --}]${s_normal}
        => provides the path to the container to updates

    ${s_bold}[General Options]${s_normal}
    -h --help        ${s_bold}Help :${s_normal} Displays command's help
    -v --verbose     ${s_bold}Verbose Mode :${s_normal} Enables verbose mode. More detailed logs will be displayed.
    -i --ignore      ${s_bold}Ignore :${s_normal} Ignores every question and gives default answer
HELP
}

# Displays this command's description
showDescription(){
cat << DESCRIPTION
${s_title}${COMMAND_NAME}${s_normal}
    Use this command to update a Gnomon Repository. It will download the newest
    available version of the every declared repository and check if everything 
    is fine.

DESCRIPTION
}


# [----- LOAD ARGUMENTS AND OPTIONS -----]
# Prepare options
COMMAND_OPTIONS=`getopt -o $COMMAND_SHORT_OPTIONS --long $COMMAND_LONG_OPTIONS -n 'javawrap' -- "$@"` \
    || (
        showHelp
        exit 1
    )
eval set -- "$COMMAND_OPTIONS"

# Set default values
verbose=0
ignore=0

# Iterate on options
while true; do
    case "$1" in  
    -h | --help) showHelp; exit 0; shift;;
    -v | --verbose) verbose=1; logInfo "Verbose mode enabled"; shift;;
    -i | --ignore) ignore=1; shift;;
    --) shift; break;;    
    *) break;;
    esac
done


# [----- EXECUTION -----]
# [Get the gnomon file]
getGnomonfile $container_path 1
logSuccess "$COMMAND_NAME executed"